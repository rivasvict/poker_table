set_game_task:
  description: >
    Set the initial state of the game. This includes making the cards repartition
    between the players where each player gets 2 cards. After that, the game master
    will ask the player_1 to bet. The way the state changed is by means of updating
    a json file that contains the state of the game.
  expected_output: >
    The instruction to the player_1 to bet.
  agent: game_master

player_1_check_cards_task:
  description: >
    You see your cards on hand and the community cards.
  expected_output: >
    String that describes your cards and the community cards.
  agent: player_1

player_1_bet_task:
  description: >
    After checking your cards and the community cards, carefully
    think about your bet and make it.
  expected_output: >
    The bet you made. Then instruct the player_2 to bet.
  agent: player_1

player_2_check_cards_task:
  description: >
    You see your cards on hand and the community cards.
  expected_output: >
    String that describes your cards and the community cards.
  agent: player_2

player_2_bet_task:
  description: >
    After checking your cards and the community cards, carefully
    think about your bet and make it.
  expected_output: >
    The bet you made. Then instruct the player_3 to bet.
  agent: player_2

player_3_check_cards_task:
  description: >
    You see your cards on hand and the community cards.
  expected_output: >
    String that describes your cards and the community cards.
  agent: player_3

player_3_bet_task:
  description: >
    After checking your cards and the community cards, carefully
    think about your bet and make it.
  expected_output: >
    The bet you made. Ask the game master to decide who won
    the round.
  agent: player_3

decide_round_winner_task:
  description: >
    Based on the players' bets and the community cards, the game master decides who won the round.
  expected_output: >
    The result of the round.
  agent: game_master
